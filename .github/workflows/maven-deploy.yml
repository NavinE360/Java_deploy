
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
#hello
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
      
jobs:
 
 deploy:
    runs-on: self-hosted  # Run on your self-hosted runner
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: python-code-artifact
    - name: Verify Downloaded Artifact
      run: |
        # List the contents of the current directory to verify the artifact is downloaded
        echo "Listing files after artifact download"
        ls -al
        echo "Listing contents of the downloaded artifact"
        ls -al  # This will show the contents of the artifact files
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-northeast-1'
        
    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/nav18.pem
        chmod 600 ~/.ssh/nav18.pem  # Set appropriate permissions for the private key

    - name: Ensure target directory exists on EC2
      run: |
        ssh -i ~/.ssh/nav18.pem ubuntu@ip-18-181-84-207 << 'EOF'
          # Ensure /home/ubuntu/app directory exists
          sudo mkdir -p /home/ubuntu/app
          sudo chown ubuntu:ubuntu /home/ubuntu/app  # Give ownership to the ubuntu user
          # Ensure it has the correct permissions
          sudo chmod 755 /home/ubuntu/app
        EOF
    - name: Deploy code to EC2
      run: |
        # Verify that the artifact directory exists and list its contents
        #echo "Checking if the artifact directory exists:"
        #ls -al artifact/
        # Copy the artifact to EC2 instance using scp with the private key
        #scp -i ~/.ssh/tok.pem -r artifact/* ubuntu@ip-172-31-6-43:/home/ubuntu/app
        #scp -i ~/.ssh/tok.pem -r artifact/* ubuntu@ip-172-31-6-43:/home/ubuntu/app
        scp -i ~/.ssh/nav18.pem -r * ubuntu@ip-18-181-84-207:/home/ubuntu/app
        # SSH into the EC2 instance to install dependencies and start the app
        ssh -i ~/.ssh/nav18.pem ubuntu@ip-18-181-84-207 << 'EOF'
          cd /home/ubuntu/app
       
        EOF
     
      
